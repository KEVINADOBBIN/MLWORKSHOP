# -*- coding: utf-8 -*-
"""day5.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12wHjH00Tz1AynDNyXKjHlijOj_Jrcn_9
"""

# import numpy, pandas and matplotlib

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

# load the Salary_Data.csv file
df=pd.read_csv('Salary_Data.csv')

df.head(2)

df.tail(2)

df.tail()

df.shape

df.YearsExperience

df["YearsExperience"],df["Salary"]

# Plot the scatter diagram
plt.scatter(df.YearsExperience,df.Salary)

YearsExperience = df.iloc[:, :-1].values
Salary = df.iloc[:, -1].values

YearsExperience.shape, Salary.shape

X = df.iloc[:, :-1].values
y = df.iloc[:, -1].values

X.shape, y.shape

# import train_test_split from sklearn.model_selection and train the dataset to train and test sets
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test=train_test_split(X, y, test_size=1/3)

X_train

y_train

X_train.shape,y_train.shape,X_test.shape,y_test.shape

# Load the LinearRegressor from sklearn.linear_model and fit the data
from sklearn.linear_model import LinearRegression
regressor=LinearRegression()
regressor.fit(X_train,y_train)

# Make predictions with test data
y_pred=regressor.predict(X_test)

regressor.predict(np.array([7]).reshape(1,-1))

plt.scatter(X_train,y_train,color='red')

plt.plot(X_train, regressor.predict(X_train), color = 'blue')


plt.xlabel('YearsofExperience')
plt.ylabel('Salary')
plt.title('Salary vs Experience (Test set)')

plt.scatter(X_test, y_test, color = 'red')
plt.plot(X_train, regressor.predict(X_train), color = 'blue')
plt.title('Salary vs Experience (Test set)')
plt.xlabel('Years of Experience')
plt.ylabel('Salary')
plt.show()

from sklearn.metrics import mean_squared_error
print("Mean squared error: %.2f" % mean_squared_error(y_test, y_pred))

from sklearn.metrics import r2_score
print("Coefficient of determination: %.2f" % r2_score(y_test, y_pred))